	drop table if exists CONSULTA;
drop table if exists AGENDAMENTO;
drop table if exists CONTATO;
drop table if exists ENDERECO;
drop table if exists PACIENTE;
drop table if exists MEDICO;
drop table if exists PESSOA;

CREATE TABLE IF NOT EXISTS PESSOA (
  id SERIAL PRIMARY KEY NOT NULL,
  rg_pessoa VARCHAR(255) UNIQUE NOT NULL,
  cpf_pessoa VARCHAR(255) UNIQUE NOT NULL,
  nome_pessoa VARCHAR(255) NOT NULL,
  sexo_pessoa VARCHAR(255) NOT NULL,
  datanasc_pessoa DATE NOT NULL
);

INSERT INTO PESSOA (rg_pessoa, cpf_pessoa, nome_pessoa, sexo_pessoa, datanasc_pessoa) VALUES
('1234567', '12345678901', 'João Silva', 'M', '1990-01-01'),
('2345678', '23456789012', 'Maria Oliveira', 'F', '1985-02-15'),
('3456789', '34567890123', 'Carlos Pereira', 'M', '1992-05-20'),
('4567890', '45678901234', 'Ana Santos', 'F', '1988-08-10'),
('5678901', '56789012345', 'Rodrigo Souza', 'M', '1995-11-25'),
('6789012', '67890123456', 'Juliana Lima', 'F', '1982-04-05'),
('7890123', '78901234567', 'Lucas Mendes', 'M', '1991-07-30'),
('8901234', '89012345678', 'Fernanda Costa', 'F', '1987-09-18'),
('9012345', '90123456789', 'Rafael Oliveira', 'M', '1993-12-05'),
('1122334', '11223344556', 'Aline Pereira', 'F', '1985-03-21'),
('4455667', '44556677889', 'Gustavo Santos', 'M', '1990-06-14'),
('7788990', '77889900112', 'Camila Lima', 'F', '1988-08-01'),
('9988776', '99887766554', 'Pedro Souza', 'M', '1997-11-09'),
('1122336', '11223344557', 'Luana Oliveira', 'F', '1983-04-22'),
('4455669', '44556677890', 'Marcos Pereira', 'M', '1996-07-15'),
('7788992', '77889900113', 'Amanda Costa', 'F', '1989-10-03'),
('9988778', '99887766555', 'Vinícius Santos', 'M', '1994-01-18'),
('1122338', '11223344558', 'Isabela Lima', 'F', '1981-05-29'),
('4455671', '44556677891', 'Paulo Mendes', 'M', '1999-08-11'),
('7788994', '77889900114', 'Larissa Oliveira', 'F', '1986-12-26'),
('9988780', '99887766556', 'Luciana Costa', 'F', '1991-03-05'),
('1122340', '11223344559', 'Roberto Souza', 'M', '1984-06-17'),
('4455673', '44556677892', 'Eduarda Lima', 'F', '1992-09-01'),
('7788996', '77889900115', 'Felipe Santos', 'M', '1987-11-07'),
('9988782', '99887766557', 'Carolina Pereira', 'F', '1996-02-24'),
('1122342', '11223344560', 'Thiago Oliveira', 'M', '1980-05-12'),
('4455675', '44556677893', 'Julia Lima', 'F', '1993-08-06'),
('7788998', '77889900116', 'Daniel Costa', 'M', '1988-10-28'),
('9988784', '99887766558', 'Mariana Santos', 'F', '1995-01-21'),
('1122344', '11223344561', 'Giovanni Souza', 'M', '1982-04-03'),
('4455677', '44556677894', 'Patrícia Oliveira', 'F', '1997-07-18'),
('7788100', '77889900117', 'Roberta Lima', 'F', '1989-09-14'),
('9988786', '99887766559', 'Leonardo Costa', 'M', '1994-12-09'),
('1122346', '11223344562', 'Vanessa Santos', 'F', '1986-01-26'),
('4455679', '44556677895', 'Renato Pereira', 'M', '1991-04-11'),
('7788102', '77889900118', 'Nathalia Oliveira', 'F', '1983-06-19'),
('9988788', '99887766560', 'Alexandre Lima', 'M', '1990-09-04'),
('1122348', '11223344563', 'Fernanda Souza', 'F', '1985-12-03'),
('4455681', '44556677896', 'Diego Santos', 'M', '1992-02-15'),
('7788104', '77889900119', 'Luiza Costa', 'F', '1988-05-28'),
('9988790', '99887766561', 'Erick Oliveira', 'M', '1995-08-22'),
('1122350', '11223344564', 'Leticia Lima', 'F', '1981-07-16'),
('4455683', '44556677897', 'Ana Carolina', 'F', '1998-11-28'),
('7788106', '77889900120', 'Lucas Oliveira', 'M', '1984-02-07'),
('9988792', '99887766562', 'Isabel Pereira', 'F', '1992-05-02'),
('1122352', '11223344565', 'Fábio Santos', 'M', '1989-08-17'),
('4455685', '44556677898', 'Gabriela Lima', 'F', '1994-10-12'),
('7788108', '77889900121', 'Ricardo Costa', 'M', '1987-01-26'),
('9988794', '99887766563', 'Amanda Souza', 'F', '1996-04-11'),
('1122354', '11223344566', 'Henrique Oliveira', 'M', '1983-07-21'),
('4455687', '44556677899', 'Juliana Pereira', 'F', '1990-09-05');

CREATE TABLE IF NOT EXISTS CONTATO (
  id SERIAL PRIMARY KEY NOT NULL,
  email_contato VARCHAR(255),
  telefone_contato VARCHAR(255),
  fk_id_pessoa INTEGER NOT NULL,
  CONSTRAINT fk_id_pessoa FOREIGN KEY (fk_id_pessoa) REFERENCES PESSOA(id) MATCH FULL on delete cascade on update cascade
);

INSERT INTO CONTATO (email_contato, telefone_contato, fk_id_pessoa) VALUES
('joao.silva@email.com', '123456789', 1),
('maria.oliveira@email.com', '234567890', 2),
('carlos.pereira@email.com', '345678901', 3),
('ana.santos@email.com', '456789012', 4),
('rodrigo.souza@email.com', '567890123', 5),
('juliana.lima@email.com', '678901234', 6),
('lucas.mendes@email.com', '789012345', 7),
('fernanda.costa@email.com', '890123456', 8),
('rafael.oliveira@email.com', '901234567', 9),
('aline.pereira@email.com', '112233445', 10),
('gustavo.santos@email.com', '445566778', 11),
('camila.lima@email.com', '778899001', 12),
('pedro.souza@email.com', '998877665', 13),
('luana.oliveira@email.com', '112233445', 14),
('marcos.pereira@email.com', '445566778', 15),
('amanda.costa@email.com', '778899001', 16),
('vinicius.santos@email.com', '998877665', 17),
('isabela.lima@email.com', '112233445', 18),
('paulo.mendes@email.com', '445566778', 19),
('larissa.oliveira@email.com', '778899001', 20),
('luciana.costa@email.com', '998877665', 21),
('roberto.souza@email.com', '112233445', 22),
('eduarda.lima@email.com', '445566778', 23),
('felipe.santos@email.com', '778899001', 24),
('carolina.pereira@email.com', '998877665', 25),
('thiago.oliveira@email.com', '112233445', 26),
('julia.lima@email.com', '445566778', 27),
('daniel.costa@email.com', '778899001', 28),
('mariana.santos@email.com', '998877665', 29),
('giovanni.souza@email.com', '112233445', 30),
('patricia.oliveira@email.com', '445566778', 31),
('roberta.lima@email.com', '778899001', 32),
('leonardo.costa@email.com', '998877665', 33),
('vanessa.santos@email.com', '112233445', 34),
('renato.pereira@email.com', '445566778', 35),
('nathalia.oliveira@email.com', '778899001', 36),
('alexandre.lima@email.com', '998877665', 37),
('fernanda.souza@email.com', '112233445', 38),
('diego.santos@email.com', '445566778', 39),
('luiza.costa@email.com', '778899001', 40),
('erick.oliveira@email.com', '998877665', 41),
('leticia.lima@email.com', '112233445', 42),
('ana.carolina@email.com', '445566778', 43),
('lucas.oliveira@email.com', '778899001', 44),
('isabel.pereira@email.com', '998877665', 45),
('fabio.santos@email.com', '112233445', 46),
('gabriela.lima@email.com', '445566778', 47),
('ricardo.costa@email.com', '778899001', 48),
('amanda.souza@email.com', '998877665', 49),
('henrique.oliveira@email.com', '112233445', 50);

  
CREATE TABLE IF NOT EXISTS ENDERECO (
  id SERIAL PRIMARY KEY NOT NULL,
  estado_endereco VARCHAR(255) NOT NULL,
  cidade_endereco varchar(255) NOT NULL,
  bairro_endereco VARCHAR(255) NOT NULL,
  rua_endereco VARCHAR(255) NOT NULL,
  logradouro_endereco VARCHAR(255) NOT NULL,
  fk_id_pessoa INTEGER NOT NULL,
  CONSTRAINT fk_id_pessoa FOREIGN KEY (fk_id_pessoa) REFERENCES PESSOA(id) MATCH FULL on delete cascade on update cascade
);

INSERT INTO ENDERECO (estado_endereco, cidade_endereco, bairro_endereco, rua_endereco, logradouro_endereco, fk_id_pessoa) VALUES
('SP', 'São Paulo', 'Centro', 'Rua A', 'Apartamento 101', 1),
('RJ', 'Rio de Janeiro', 'Copacabana', 'Avenida B', 'Casa 102', 2),
('MG', 'Belo Horizonte', 'Savassi', 'Rua C', 'Apartamento 103', 3),
('RS', 'Porto Alegre', 'Moinhos de Vento', 'Avenida D', 'Casa 104', 4),
('BA', 'Salvador', 'Barra', 'Rua E', 'Apartamento 105', 5),
('PR', 'Curitiba', 'Batel', 'Avenida F', 'Casa 106', 6),
('PE', 'Recife', 'Boa Viagem', 'Rua G', 'Apartamento 107', 7),
('CE', 'Fortaleza', 'Aldeota', 'Avenida H', 'Casa 108', 8),
('SC', 'Florianópolis', 'Centro', 'Rua I', 'Apartamento 109', 9),
('GO', 'Goiânia', 'Setor Bueno', 'Avenida J', 'Casa 110', 10),
('AM', 'Manaus', 'Centro', 'Rua K', 'Apartamento 111', 11),
('PA', 'Belém', 'Batista Campos', 'Avenida L', 'Casa 112', 12),
('ES', 'Vitória', 'Jardim da Penha', 'Rua M', 'Apartamento 113', 13),
('PB', 'João Pessoa', 'Manaíra', 'Avenida N', 'Casa 114', 14),
('MT', 'Cuiabá', 'Araés', 'Rua O', 'Apartamento 115', 15),
('AL', 'Maceió', 'Ponta Verde', 'Avenida P', 'Casa 116', 16),
('PI', 'Teresina', 'Centro', 'Rua Q', 'Apartamento 117', 17),
('TO', 'Palmas', 'Plano Diretor Sul', 'Avenida R', 'Casa 118', 18),
('RN', 'Natal', 'Ponta Negra', 'Rua S', 'Apartamento 119', 19),
('MA', 'São Luís', 'Calhau', 'Avenida T', 'Casa 120', 20),
('MS', 'Campo Grande', 'Centro', 'Rua U', 'Apartamento 121', 21),
('SE', 'Aracaju', 'Jardins', 'Avenida V', 'Casa 122', 22),
('RO', 'Porto Velho', 'Centro', 'Rua W', 'Apartamento 123', 23),
('AC', 'Rio Branco', 'Bosque', 'Avenida X', 'Casa 124', 24),
('RR', 'Boa Vista', 'Centro', 'Rua Y', 'Apartamento 125', 25),
('AP', 'Macapá', 'Central', 'Avenida Z', 'Casa 126', 26),
('PI', 'Teresina', 'Centro', 'Rua AA', 'Apartamento 127', 27),
('TO', 'Palmas', 'Plano Diretor Sul', 'Avenida BB', 'Casa 128', 28),
('RN', 'Natal', 'Ponta Negra', 'Rua CC', 'Apartamento 129', 29),
('MA', 'São Luís', 'Calhau', 'Avenida DD', 'Casa 130', 30),
('MS', 'Campo Grande', 'Centro', 'Rua EE', 'Apartamento 131', 31),
('SE', 'Aracaju', 'Jardins', 'Avenida FF', 'Casa 132', 32),
('RO', 'Porto Velho', 'Centro', 'Rua GG', 'Apartamento 133', 33),
('AC', 'Rio Branco', 'Bosque', 'Avenida HH', 'Casa 134', 34),
('RR', 'Boa Vista', 'Centro', 'Rua II', 'Apartamento 135', 35),
('AP', 'Macapá', 'Central', 'Avenida JJ', 'Casa 136', 36),
('PI', 'Teresina', 'Centro', 'Rua KK', 'Apartamento 137', 37),
('TO', 'Palmas', 'Plano Diretor Sul', 'Avenida LL', 'Casa 138', 38),
('RN', 'Natal', 'Ponta Negra', 'Rua MM', 'Apartamento 139', 39),
('MA', 'São Luís', 'Calhau', 'Avenida NN', 'Casa 140', 40),
('MS', 'Campo Grande', 'Centro', 'Rua OO', 'Apartamento 141', 41),
('SE', 'Aracaju', 'Jardins', 'Avenida PP', 'Casa 142', 42),
('RO', 'Porto Velho', 'Centro', 'Rua QQ', 'Apartamento 143', 43),
('AC', 'Rio Branco', 'Bosque', 'Avenida RR', 'Casa 144', 44),
('RR', 'Boa Vista', 'Centro', 'Rua SS', 'Apartamento 145', 45),
('AP', 'Macapá', 'Central', 'Avenida TT', 'Casa 146', 46),
('PI', 'Teresina', 'Centro', 'Rua UU', 'Apartamento 147', 47),
('TO', 'Palmas', 'Plano Diretor Sul', 'Avenida VV', 'Casa 148', 48),
('RN', 'Natal', 'Ponta Negra', 'Rua WW', 'Apartamento 149', 49),
('MA', 'São Luís', 'Calhau', 'Avenida XX', 'Casa 150', 50);


CREATE TABLE IF NOT EXISTS MEDICO (
  id SERIAL PRIMARY KEY NOT NULL,
  crm_medico VARCHAR(255) UNIQUE NOT NULL,
  fk_id_pessoa INTEGER NOT NULL,
  especialidade_medico VARCHAR(255) NOT NULL,
  CONSTRAINT fk_id_pessoa FOREIGN KEY (fk_id_pessoa) REFERENCES PESSOA(id) MATCH FULL on delete cascade on update cascade
);

INSERT INTO MEDICO (crm_medico, fk_id_pessoa, especialidade_medico) VALUES
('12345/SP', 1, 'Clínico Geral'),
('23456/RJ', 2, 'Dermatologista'),
('34567/MG', 3, 'Cardiologista'),
('45678/RS', 4, 'Ortopedista'),
('56789/BA', 5, 'Ginecologista'),
('67890/PR', 6, 'Neurologista'),
('78901/PE', 7, 'Oftalmologista'),
('89012/CE', 8, 'Pediatra'),
('90123/SC', 9, 'Endocrinologista'),
('11223/GO', 10, 'Psiquiatra'),
('44556/AM', 11, 'Urologista'),
('77889/PA', 12, 'Gastroenterologista'),
('99887/ES', 13, 'Oncologista'),
('11223/PB', 14, 'Radiologista'),
('44556/MT', 15, 'Dentista'),
('77889/AL', 16, 'Fisioterapeuta'),
('99887/PI', 17, 'Nutricionista'),
('11223/TO', 18, 'Psicólogo'),
('44556/RN', 19, 'Otorrinolaringologista'),
('77889/MA', 20, 'Pneumologista');



CREATE TABLE IF NOT EXISTS PACIENTE (
  id SERIAL PRIMARY KEY NOT NULL,
  diagnostico_paciente VARCHAR(255) NOT NULL,
  altura_paciente VARCHAR(255) NOT NULL,
  	  peso_paciente VARCHAR(255) NOT NULL,
  fk_id_pessoa INTEGER NOT NULL,
  CONSTRAINT fk_id_pessoa FOREIGN KEY (fk_id_pessoa) REFERENCES PESSOA(id) MATCH FULL on delete cascade on update cascade
);

INSERT INTO PACIENTE (diagnostico_paciente, altura_paciente, peso_paciente, fk_id_pessoa) VALUES
('Febre alta', '170 cm', '80 kg', 21),
('Dermatite', '160 cm', '55 kg', 22),
('Pressão alta', '175 cm', '80 kg', 23),
('Fratura no braço', '165 cm', '65 kg', 24),
('Gravidez confirmada', '160 cm', '50 kg', 25),
('Enxaqueca crônica', '180 cm', '80 kg', 26),
('Problema de visão', '165 cm', '70 kg', 27),
('Alergia alimentar', '170 cm', '50 kg', 28),
('Diabetes tipo 2', '160 cm', '80 kg', 29),
('Depressão', '175 cm', '80 kg', 30),
('Infecção urinária', '160 cm', '50 kg', 31),
('Problema gastrointestinal', '180 cm', '80 kg', 32),
('Câncer de mama', '165 cm', '80 kg', 33),
('Fratura na perna', '170 cm', '65 kg', 34),
('Tratamento odontológico', '160 cm', '55 kg', 35),
('Lesão no joelho', '175 cm', '80 kg', 36),
('Controle de peso', '160 cm', '50 kg', 37),
('Aconselhamento psicológico', '180 cm', '80 kg', 38),
('Problema respiratório', '165 cm', '70 kg', 39),
('Problema auditivo', '170 cm', '50 kg', 40),
('Lesão no ombro', '160 cm', '55 kg', 41),
('Reabilitação física', '175 cm', '80 kg', 42),
('Distúrbio alimentar', '160 cm', '50 kg', 43),
('Problema cardíaco', '180 cm', '80 kg', 44),
('Acompanhamento nutricional', '165 cm', '80 kg', 45),
('Alergia respiratória', '170 cm', '50 kg', 46),
('Dor crônica nas costas', '160 cm', '55 kg', 47),
('Problema renal', '175 cm', '80 kg', 48),
('Tratamento psiquiátrico', '160 cm', '50 kg', 49),
('Alergia cutânea', '180 cm', '80 kg', 50);


CREATE TABLE IF NOT EXISTS AGENDAMENTO (
  id SERIAL PRIMARY KEY NOT NULL,
  fk_id_pessoa INTEGER NOT NULL,
  fk_id_medico INTEGER NOT NULL,
  datahoraagendamento_agendamento TIMESTAMP NOT NULL,
  CONSTRAINT fk_id_pessoa FOREIGN KEY (fk_id_pessoa) REFERENCES PESSOA(id) MATCH FULL on delete cascade on update cascade,
  CONSTRAINT fk_id_medico FOREIGN KEY (fk_id_medico) REFERENCES MEDICO(id) MATCH FULL on delete cascade on update cascade
);


INSERT INTO AGENDAMENTO (fk_id_pessoa, fk_id_medico, datahoraagendamento_agendamento) VALUES
(1, 20, '2023-10-17 09:00:00'),
(2, 19, '2023-10-17 10:30:00'),
(3, 18, '2023-10-17 12:00:00'),
(4, 17, '2023-10-17 14:30:00'),
(5, 16, '2023-10-17 16:00:00'),
(6, 15, '2023-10-18 09:30:00'),
(7, 14, '2023-10-18 11:00:00'),
(8, 13, '2023-10-18 13:30:00'),
(9, 12, '2023-10-18 15:00:00'),
(10, 11, '2023-10-18 16:30:00'),
(11, 10, '2023-10-19 10:00:00'),
(12, 9, '2023-10-19 11:30:00'),
(13, 8, '2023-10-19 13:00:00'),
(14, 7, '2023-10-19 15:30:00'),
(15, 6, '2023-10-19 17:00:00'),
(16, 5, '2023-10-20 09:30:00'),
(17, 4, '2023-10-20 11:00:00'),
(18, 3, '2023-10-20 12:30:00'),
(19, 2, '2023-10-20 14:00:00'),
(20, 1, '2023-10-20 15:30:00'),
(21, 15, '2023-11-17 09:00:00'),
(22, 1, '2023-11-17 09:00:00'),
(23, 2, '2023-11-17 09:00:00'),
(24, 3, '2023-11-17 10:30:00'),
(25, 4, '2023-11-17 10:30:00'),
(26, 5, '2023-11-17 10:30:00'),
(27, 6, '2023-11-17 12:00:00'),
(28, 7, '2023-11-17 12:00:00'),
(29, 8, '2023-11-17 12:00:00'),
(30, 9, '2023-11-17 14:30:00'),
(31, 10, '2023-11-17 14:30:00'),
(32, 11, '2023-11-17 14:30:00'),
(33, 12, '2023-11-17 16:00:00'),
(34, 13, '2023-11-17 16:00:00'),
(35, 14, '2023-11-17 16:00:00'),
(6, 15, '2023-11-18 09:30:00'),
(21, 16, '2023-11-18 09:30:00'),
(7, 14, '2023-11-18 11:00:00'),
(22, 13, '2023-11-18 11:00:00'),
(8, 12, '2023-11-18 13:30:00'),
(23, 11, '2023-11-18 13:30:00'),
(9, 10, '2023-11-18 15:00:00'),
(24, 9, '2023-11-18 15:00:00'),
(10, 8, '2023-11-18 16:30:00'),
(25, 7, '2023-11-18 16:30:00'),
(11, 10, '2023-11-19 10:00:00'),
(21, 11, '2023-11-19 10:00:00'),
(12, 9, '2023-11-19 11:30:00'),
(22, 12, '2023-11-19 11:30:00'),
(13, 8, '2023-11-19 13:00:00'),
(23, 13, '2023-11-19 13:00:00'),
(14, 7, '2023-11-19 15:30:00'),
(24, 14, '2023-11-19 15:30:00'),
(15, 6, '2023-11-19 17:00:00'),
(25, 15, '2023-11-19 17:00:00'),
(26, 5, '2023-11-20 09:30:00'),
(27, 6, '2023-11-20 09:30:00'),
(28, 4, '2023-11-20 11:00:00'),
(29, 7, '2023-11-20 11:00:00'),
(30, 3, '2023-11-20 12:30:00'),
(31, 8, '2023-11-20 12:30:00'),
(32, 2, '2023-11-20 14:00:00'),
(33, 9, '2023-11-20 14:00:00'),
(34, 1, '2023-11-20 15:30:00'),
(35, 10, '2023-11-20 15:30:00'),
(21, 1, '2023-11-21 09:00:00'),
(22, 2, '2023-11-21 10:30:00'),
(23, 3, '2023-11-21 12:00:00'),
(24, 4, '2023-11-21 14:30:00'),
(25, 5, '2023-11-21 16:00:00'),
(26, 6, '2023-11-22 09:30:00'),
(27, 7, '2023-11-22 11:00:00'),
(28, 8, '2023-11-22 13:30:00'),
(29, 9, '2023-11-22 15:00:00'),
(30, 10, '2023-11-22 16:30:00'),
(2, 20, '2023-11-23 09:00:00'),
(1, 19, '2023-11-24 10:30:00'),
(2, 18, '2023-11-25 12:00:00'),
(1, 17, '2023-11-26 14:30:00'),
(1, 20, '2023-11-27 09:00:00'),
(2, 19, '2023-11-27 10:30:00'),
(3, 18, '2023-11-27 12:00:00'),
(4, 17, '2023-11-27 14:30:00'),
(5, 16, '2023-11-27 16:00:00'),
(2, 16, '2023-11-28 16:00:00'),
(1, 20, '2023-12-17 09:00:00'),
(2, 19, '2023-12-17 10:30:00'),
(3, 18, '2023-12-17 12:00:00'),
(4, 17, '2023-12-17 14:30:00'),
(5, 16, '2023-12-17 16:00:00'),
(4, 17, '2020-04-17 14:30:00'),
(5, 16, '2020-01-10 16:00:00'),
(1, 20, '2021-01-13 09:00:00'),
(2, 19, '2021-02-20 10:30:00'),
(3, 18, '2021-10-23 12:00:00'),
(1, 20, '2022-08-18 09:00:00'),
(2, 19, '2022-03-19 10:30:00'),
(3, 18, '2022-06-01 12:00:00'),
(4, 17, '2022-07-02 14:30:00'),
(5, 16, '2022-06-03 16:00:00');


CREATE TABLE IF NOT EXISTS CONSULTA (
  id SERIAL PRIMARY KEY NOT NULL,
  fk_id_agendamento INTEGER NOT NULL,
  datahorainicio_consulta TIMESTAMP,
  datahorafim_consulta TIMESTAMP,
  status_consulta VARCHAR(255),
  CONSTRAINT fk_id_agendamento FOREIGN KEY (fk_id_agendamento) REFERENCES AGENDAMENTO(id) MATCH FULL on delete cascade on update cascade
);

INSERT INTO CONSULTA (fk_id_agendamento, datahorainicio_consulta, datahorafim_consulta, status_consulta) VALUES
(1, '2023-10-17 09:00:00', '2023-10-17 09:20:00', 'realizada'),
(2, '2023-10-17 10:30:00', NULL, 'faltosa'),
(3, '2023-10-17 12:00:00', '2023-10-17 12:20:00', 'realizada'),
(4, '2023-10-17 14:30:00', '2023-10-17 14:50:00', 'realizada'),
(5, '2023-10-17 16:00:00', NULL, 'faltosa'),
(6, '2023-10-18 09:30:00', '2023-10-18 09:40:00', 'realizada'),
(7, '2023-10-18 11:00:00', '2023-10-18 11:20:00', 'realizada'),
(8, '2023-10-18 13:30:00', '2023-10-18 13:50:00', 'realizada'),
(9, '2023-10-18 15:00:00', '2023-10-18 15:20:00', 'realizada'),
(10, '2023-10-18 16:30:00', NULL, 'faltosa'),
(11, '2023-10-19 10:00:00', '2023-10-19 10:20:00', 'realizada'),
(12, '2023-10-19 11:30:00', '2023-10-19 11:40:00', 'realizada'),
(13, '2023-10-19 13:00:00', NULL, 'faltosa'),
(14, '2023-10-19 15:30:00', '2023-10-19 16:00:00', 'realizada'),
(15, '2023-10-19 17:00:00', NULL, 'faltosa'),
(16, '2023-10-20 09:30:00', '2023-10-20 09:50:00', 'realizada'),
(17, '2023-10-20 11:00:00', '2023-10-20 11:15:00', 'realizada'),
(18, '2023-10-20 12:30:00', '2023-10-20 13:20:00', 'realizada'),
(19, '2023-10-20 14:00:00', '2023-10-20 15:00:00', 'realizada'),
(20, '2023-10-20 15:30:00', NULL, 'faltosa'),
(21, '2023-11-17 09:00:00', '2023-11-17 09:20:00', 'realizada'),
(22, '2023-11-17 09:00:00', '2023-11-17 09:20:00', 'realizada'),
  	(23, '2023-11-17 09:00:00', '2023-11-17 09:20:00', 'realizada'),
(24, '2023-11-17 10:30:00', '2023-11-17 11:00:00', 'realizada'),
(25, '2023-11-17 10:30:00', '2023-11-17 11:00:00', 'realizada'),
(26, '2023-11-17 10:30:00', NULL, 'faltosa'),
(27, '2023-11-17 12:00:00', NULL, 'faltosa'),
(28, '2023-11-17 12:00:00', '2023-11-17 12:40:00', 'realizada'),
(29, '2023-11-17 12:00:00', '2023-11-17 12:40:00', 'realizada'),
(30, '2023-11-17 14:30:00', NULL, 'faltosa'),
(31, '2023-11-17 14:30:00', '2023-11-17 15:00:00', 'realizada'),
(32, '2023-11-17 14:30:00', NULL, 'faltosa'),
(33, '2023-11-17 16:00:00', '2023-11-17 16:30:00', 'realizada'),
(34, '2023-11-17 16:00:00', '2023-11-17 16:30:00', 'realizada'),
(35, '2023-11-17 16:00:00', '2023-11-17 16:30:00', 'realizada'),
(36, '2023-11-18 09:30:00', '2023-11-18 10:00:00', 'realizada'),
(37, '2023-11-18 09:30:00', '2023-11-18 10:00:00', 'realizada'),
(38, '2023-11-18 11:00:00', '2023-11-18 11:40:00', 'realizada'),
(39, '2023-11-18 11:00:00', '2023-11-18 11:40:00', 'realizada'),
(40, '2023-11-18 13:30:00', '2023-11-18 14:10:00', 'realizada'),
(41, '2023-11-18 13:30:00', '2023-11-18 14:10:00', 'realizada'),
(42, '2023-11-18 15:00:00', '2023-11-18 15:40:00', 'realizada'),
(43, '2023-11-18 15:00:00', '2023-11-18 15:40:00', 'realizada'),
(44, '2023-11-18 16:30:00', NULL, 'faltosa'),
(45, '2023-11-18 16:30:00', '2023-11-18 17:20:00', 'realizada'),
(46, '2023-11-19 10:00:00', '2023-11-19 10:20:00', 'realizada'),
(47, '2023-11-19 10:00:00', '2023-11-19 10:20:00', 'realizada'),
(48, '2023-11-19 11:30:00', '2023-11-19 12:00:00', 'realizada'),
(49, '2023-11-19 11:30:00', '2023-11-19 12:00:00', 'realizada'),
(50, '2023-11-19 13:00:00', '2023-11-19 13:30:00', 'realizada'),
(51, '2023-11-19 13:00:00', '2023-11-19 13:30:00', 'realizada'),
(52, '2023-11-19 15:30:00', '2023-11-19 16:00:00', 'realizada'),
(53, '2023-11-19 15:30:00', '2023-11-19 16:00:00', 'realizada'),
(54, '2023-11-19 17:00:00', '2023-11-19 17:40:00', 'realizada'),
(55, '2023-11-19 17:00:00', '2023-11-19 17:40:00', 'realizada'),
(56, '2023-11-20 09:30:00', NULL, 'faltosa'),
(57, '2023-11-20 09:30:00', '2023-11-20 10:10:00', 'realizada'),
(58, '2023-11-20 11:00:00', '2023-11-20 11:30:00', 'realizada'),
(59, '2023-11-20 11:00:00', '2023-11-20 11:30:00', 'realizada'),
(60, '2023-11-20 12:30:00', '2023-11-20 13:00:00', 'realizada'),
(61, '2023-11-20 12:30:00', '2023-11-20 13:00:00', 'realizada'),
(62, '2023-11-20 14:00:00', '2023-11-20 14:30:00', 'realizada'),
(63, '2023-11-20 14:00:00', '2023-11-20 14:30:00', 'realizada'),
(64, '2023-11-20 15:30:00', '2023-11-20 16:20:00', 'realizada'),
(65, '2023-11-20 15:30:00', '2023-11-20 16:20:00', 'realizada'),
(66, '2023-11-21 09:00:00', '2023-11-21 09:40:00', 'realizada'),
(67, '2023-11-21 10:30:00', NULL, 'faltosa'),
(68, '2023-11-21 12:00:00', NULL, 'faltosa'),
(69, '2023-11-21 14:30:00', NULL, 'faltosa'),
(70, '2023-11-21 16:00:00', NULL, 'faltosa'),
(71, '2023-11-22 09:30:00', NULL, 'faltosa'),
(72, '2023-11-22 11:00:00', NULL, 'faltosa'),
(73, '2023-11-22 13:30:00', NULL, 'faltosa'),
(74, '2023-11-22 15:00:00', NULL, 'faltosa'),
(75, '2023-11-22 16:30:00', NULL, 'faltosa'),
(76, '2023-11-23 09:00:00', '2023-11-23 09:40:00', 'realizada'),
(77, '2023-11-24 10:30:00', '2023-11-24 10:40:00', 'realizada'),
(78, '2023-11-25 12:00:00', '2023-11-25 12:40:00', 'realizada'),
(79, '2023-11-26 14:30:00', '2023-11-26 15:00:00', 'realizada'),
(80, '2023-11-27 09:00:00', '2023-11-27 09:40:00', 'realizada'),
(81, '2023-11-27 10:30:00', '2023-11-27 10:40:00', 'realizada'),
(82, '2023-11-27 12:00:00', '2023-11-27 12:40:00', 'realizada'),
(83, '2023-11-27 14:30:00', '2023-11-27 15:10:00', 'realizada'),
(84, '2023-11-27 16:00:00', '2023-11-27 16:45:00', 'realizada'),
(85, '2023-11-28 16:00:00', '2023-11-28 16:40:00', 'realizada'),
(86, '2020-04-17 14:30:00', '2020-04-17 15:00:00', 'realizada'),
(87, '2020-01-10 16:00:00', '2020-01-10 16:20:00', 'realizada'),
(88, '2021-01-13 09:00:00', '2021-01-13 09:30:00', 'realizada'),
(89, '2021-02-20 10:30:00', '2021-02-20 10:50:00', 'realizada'),
(90, '2021-10-23 12:00:00', '2021-10-23 12:40:00', 'realizada'),
(91, '2022-08-18 09:00:00', '2022-08-18 10:40:00', 'realizada'),
(92, '2022-03-19 10:30:00', '2022-03-19 11:40:00', 'realizada'),
(93, '2022-06-01 12:00:00', '2022-06-01 12:40:00', 'realizada'),
(94, '2022-07-02 14:30:00', '2022-07-02 15:20:00', 'realizada'),
(95, '2022-06-03 16:00:00', '2022-06-03 17:40:00', 'realizada');
